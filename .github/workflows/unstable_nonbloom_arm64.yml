name: unstable_nonbloom_arm64

on:
  workflow_dispatch:

  schedule:
    - cron:  '0 12 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:

  init-artifacts:
    runs-on: ubuntu-22.04-arm
    env:
      TOKEN: ${{ secrets.DOCKERHUB }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - id: init_artifacts
        run: |
          mkdir -p /tmp/artifacts
      - id: prime_image
        run: |
          ./.ci/prime_image/prime_image.sh ctumrs/ros_noetic:2025-02-05 unstable
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: /tmp/artifacts/
          overwrite: true

  generate-jobs:
    needs: init-artifacts
    runs-on: ubuntu-22.04-arm
    outputs:
      packages: ${{ steps.generate.outputs.packages }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - name: Checkout CI scripts
        uses: actions/checkout@v3
        with:
          repository: ctu-mrs/ci_scripts
          ref: master
          path: .ci_scripts
          token: ${{ secrets.PUSH_TOKEN }}
      - id: generate
        run: |
          JOB_STRATEGY_MATRIX=$(./.ci/get_nonbloom_build_matrix.sh nonbloom unstable arm64)
          cat /tmp/log.txt
          echo "packages=$JOB_STRATEGY_MATRIX" >> "$GITHUB_OUTPUT"

  build-job:
    needs: generate-jobs
    runs-on: ubuntu-22.04-arm
    timeout-minutes: 360 # 6 hour timeout
    strategy:
      matrix:
        job: ${{ fromJson(needs.generate-jobs.outputs.packages) }}
      max-parallel: 1 # Run jobs serially
    env:
      TOKEN: ${{ secrets.DOCKERHUB }}
    steps:
      - name: Load artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: /tmp/artifacts/
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - name: Checkout CI scripts
        uses: actions/checkout@v3
        with:
          repository: ctu-mrs/ci_scripts
          ref: master
          path: .ci_scripts
          token: ${{ secrets.PUSH_TOKEN }}
      - id: build
        run: |
          .ci/build_nonbloom.sh nonbloom unstable arm64 "${{ matrix.job }}" ctumrs/ros_noetic:2025-02-05
          ls /tmp/artifacts
      - name: Delete old artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: artifacts
          failOnError: false
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: /tmp/artifacts/
          overwrite: true

  collect-artifacts:
    runs-on: ubuntu-22.04-arm
    needs: build-job
    env:
      PUSH_TOKEN: ${{ secrets.PUSH_TOKEN }}
    steps:
      - name: Load artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: /tmp/artifacts/
      - id: execute
        run: |
          rm /tmp/artifacts/base_sha.txt 2> /dev/null || true
          rm /tmp/artifacts/builder.tar 2> /dev/null || true
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - name: Checkout CI scripts
        uses: actions/checkout@v3
        with:
          repository: ctu-mrs/ci_scripts
          ref: master
          path: .ci_scripts
          token: ${{ secrets.PUSH_TOKEN }}
      - name: Deploy
        run: .ci_scripts/package_build/push_to_ppa.sh unstable /tmp/artifacts
