name: rostest-and-release-mrs-amd64

on:
  workflow_dispatch:

  schedule:
    - cron:  '0 20 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:

  init-artifacts:
    runs-on: ubuntu-20.04
    steps:
      - id: execute
        run: |
          mkdir -p /tmp/artifacts
          mkdir -p /tmp/artifacts/metarepositories
          touch /tmp/artifacts/generated_mrs_amd64.yaml
          touch /tmp/artifacts/compiled.txt
          echo "0" >> /tmp/artifacts/idx.txt
      - name: Save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: /tmp/artifacts/

  generate-jobs:
    needs: init-artifacts
    runs-on: ubuntu-20.04
    outputs:
      packages: ${{ steps.generate.outputs.packages }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - name: Checkout CI scripts
        uses: actions/checkout@v3
        with:
          repository: ctu-mrs/ci_scripts
          ref: master
          path: .ci_scripts
          token: ${{ secrets.PUSH_TOKEN }}
      - id: generate
        run: |
          JOB_STRATEGY_MATRIX=$(./.ci/get_build_matrix.sh mrs testing amd64)
          cat /tmp/log.txt
          echo "packages=$JOB_STRATEGY_MATRIX" >> "$GITHUB_OUTPUT"

  build-job:
    needs: generate-jobs
    runs-on: ubuntu-20.04
    timeout-minutes: 360 # 6 hour timeout
    strategy:
      matrix:
        job: ${{ fromJson(needs.generate-jobs.outputs.packages) }}
      max-parallel: 1 # Run jobs serially
    steps:
      - name: Load artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: /tmp/artifacts/
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - name: Checkout CI scripts
        uses: actions/checkout@v3
        with:
          repository: ctu-mrs/ci_scripts
          ref: master
          path: .ci_scripts
          token: ${{ secrets.PUSH_TOKEN }}
      - id: build
        run: |
          .ci/build.sh mrs testing "${{ matrix.job }}"
      - name: Save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: /tmp/artifacts/

  collect-artifacts:
    runs-on: ubuntu-20.04
    needs: build-job
    env:
      PUSH_TOKEN: ${{ secrets.PUSH_TOKEN }}
    steps:
      - name: Load artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: /tmp/artifacts/
      - id: execute
        run: |
          rm /tmp/artifacts/compiled.txt 2> /dev/null || true
          rm /tmp/artifacts/idx.txt 2> /dev/null || true
          rm /tmp/artifacts/compile_further.txt 2> /dev/null || true
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - name: Checkout CI scripts
        uses: actions/checkout@v3
        with:
          repository: ctu-mrs/ci_scripts
          ref: master
          path: .ci_scripts
          token: ${{ secrets.PUSH_TOKEN }}
      - name: Deploy
        run: .ci_scripts/package_build/push_to_ppa.sh testing /tmp/artifacts

  wait-for-ppa:
    runs-on: ubuntu-20.04
    needs: collect-artifacts
    steps:
      - id: run
        run: |
          sleep 600

  test:
    needs: wait-for-ppa
    uses: ctu-mrs/buildfarm/.github/workflows/rostest_to_release.yml@master
    secrets:
      PUSH_TOKEN: ${{ secrets.PUSH_TOKEN }}
